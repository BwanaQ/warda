# Generated by Django 5.0.4 on 2024-05-20 08:35

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('portfolio', '0002_unit_lease_info'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UnitConditionQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UnitInventoryCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='UnitConditionCheckList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('answer', models.CharField(choices=[('Y', 'Yes'), ('N', 'No'), ('U', 'Unsure')], max_length=10)),
                ('condition', models.CharField(choices=[('NE', 'Not Evaluated'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('C', 'Critical'), ('B', 'Bad'), ('D', 'Damaged'), ('U', 'Unsure')], default='F', max_length=10)),
                ('comments', models.TextField(blank=True, null=True)),
                ('is_electricity_utility', models.BooleanField(default=False)),
                ('is_water_utility', models.BooleanField(default=False)),
                ('water_meter_reading', models.CharField(blank=True, max_length=100, null=True)),
                ('electricity_meter_reading', models.CharField(blank=True, max_length=100, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property_inventory_and_conditions.unitconditionquestion')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UnitConditionQuestionTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(max_length=200)),
                ('questions', models.ManyToManyField(to='property_inventory_and_conditions.unitconditionquestion')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UnitConditionAssesment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('O', 'On Going'), ('P', 'Pending'), ('C', 'Completed')], default='F', max_length=10)),
                ('comments', models.TextField(blank=True, null=True)),
                ('is_compliant', models.BooleanField(default=False)),
                ('date_assessed', models.DateTimeField(auto_now_add=True)),
                ('overall_house_condition', models.CharField(choices=[('NE', 'Not Evaluated'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('C', 'Critical'), ('B', 'Bad'), ('D', 'Damaged'), ('U', 'Unsure')], default='P', max_length=10)),
                ('assessed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio.unit')),
                ('checklist', models.ManyToManyField(blank=True, to='property_inventory_and_conditions.unitconditionchecklist')),
                ('tempalate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property_inventory_and_conditions.unitconditionquestiontemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UnitInventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='property_inventory_and_conditions.unitinventorycategory')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio.unit')),
            ],
        ),
        migrations.AddField(
            model_name='unitconditionquestion',
            name='inventory_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property_inventory_and_conditions.unitinventoryitem'),
        ),
    ]
